<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.calman.domain.worklog.mapper.WorkLogMapper">

  <!-- 결과 매핑 - LocalDateTime 타입 적용 -->
  <resultMap id="workLogResultMap" type="com.calman.domain.worklog.dto.WorkLogDTO">
    <id property="id" column="wl_id"/>
    <result property="workDatetime" column="wl_work_datetime" jdbcType="TIMESTAMP"/>
    <result property="carModel" column="wl_car_model"/>
    <result property="productColor" column="wl_product_color"/>
    <result property="productCode" column="wl_product_code"/>
    <result property="productName" column="wl_product_name"/>
    <result property="quantity" column="wl_quantity"/>
    <result property="completedAt" column="wl_completed_at" jdbcType="TIMESTAMP"/>
    <result property="createdAt" column="wl_created_at" jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- 공통 컬럼 목록 -->
  <sql id="workLogColumns">
    wl_id, wl_work_datetime, wl_car_model, wl_product_color, wl_product_code, wl_product_name, wl_quantity, wl_completed_at, wl_created_at
  </sql>

  <!-- 작업 로그 목록 조회 (날짜 범위 조회 개선) -->
  <select id="selectWorkLogs" parameterType="map" resultMap="workLogResultMap">
    SELECT
    <include refid="workLogColumns"/>
    FROM work_logs
    <where>
      <if test="carModel != null and carModel != ''">
        AND wl_car_model LIKE '%' || #{carModel} || '%'
      </if>
      <if test="productCode != null and productCode != ''">
        AND wl_product_code LIKE '%' || #{productCode} || '%'
      </if>
      <if test="startDate != null">
        AND wl_work_datetime >= #{startDate}
      </if>
      <if test="endDate != null">
        AND wl_work_datetime &lt;= #{endDate}
      </if>
      <if test="status != null">
        <choose>
          <when test="status == 'completed'">
            AND wl_completed_at IS NOT NULL
          </when>
          <when test="status == 'incomplete'">
            AND wl_completed_at IS NULL
          </when>
        </choose>
      </if>
    </where>
    ORDER BY
    <choose>
      <when test="sortField != null">
        <choose>
          <when test="sortField == 'wl_work_datetime'">wl_work_datetime</when>
          <when test="sortField == 'wl_car_model'">wl_car_model</when>
          <when test="sortField == 'wl_product_color'">wl_product_color</when>
          <when test="sortField == 'wl_product_code'">wl_product_code</when>
          <when test="sortField == 'wl_product_name'">wl_product_name</when>
          <when test="sortField == 'wl_quantity'">wl_quantity</when>
          <when test="sortField == 'wl_created_at'">wl_created_at</when>
          <when test="sortField == 'wl_completed_at'">wl_completed_at</when>
          <otherwise>wl_work_datetime</otherwise>
        </choose>
      </when>
      <otherwise>wl_work_datetime</otherwise>
    </choose>
    <choose>
      <when test="sortDirection != null and sortDirection == 'DESC'">DESC</when>
      <otherwise>ASC</otherwise>
    </choose>
  </select>

  <!-- 새 작업 로그 삽입 (LocalDateTime 지원) -->
  <insert id="insertWorkLog" parameterType="com.calman.domain.worklog.dto.WorkLogDTO" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO work_logs (
      wl_work_datetime, wl_car_model, wl_product_color, wl_product_code, wl_product_name, wl_quantity
    ) VALUES (
               #{workDatetime}, #{carModel}, #{productColor}, #{productCode}, #{productName}, #{quantity}
             )
  </insert>

  <!-- ID로 작업 로그 조회 -->
  <select id="selectWorkLogById" resultMap="workLogResultMap">
    SELECT <include refid="workLogColumns"/>
    FROM work_logs
    WHERE wl_id = #{id}
  </select>

  <!-- 작업 로그 업데이트 (LocalDateTime 지원) -->
  <update id="updateWorkLog" parameterType="com.calman.domain.worklog.dto.WorkLogDTO">
    UPDATE work_logs
    SET
      wl_work_datetime = #{workDatetime},
      wl_car_model = #{carModel},
      wl_product_color = #{productColor},
      wl_product_code = #{productCode},
      wl_product_name = #{productName},
      wl_quantity = #{quantity}
    WHERE wl_id = #{id}
  </update>

  <!-- 작업 로그 완료 상태 업데이트 -->
  <update id="updateWorkLogCompletionStatus">
    UPDATE work_logs
    SET wl_completed_at = #{completedAt, jdbcType=TIMESTAMP}
    WHERE wl_id = #{id}
  </update>

  <!-- 작업 로그 삭제 -->
  <delete id="deleteWorkLog">
    DELETE FROM work_logs
    WHERE wl_id = #{id}
  </delete>

  <!-- 날짜 범위로 작업 로그 조회 (개선) -->
  <select id="selectWorkLogsByDateRange" resultMap="workLogResultMap">
    SELECT <include refid="workLogColumns"/>
    FROM work_logs
    WHERE wl_work_datetime BETWEEN #{startDate} AND #{endDate}
    ORDER BY wl_work_datetime ASC
  </select>

  <!-- 정확한 날짜로 작업 로그 조회 (개선) -->
  <select id="selectWorkLogsByExactDate" resultMap="workLogResultMap">
    SELECT <include refid="workLogColumns"/>
    FROM work_logs
    WHERE date(wl_work_datetime) = #{exactDate}
    ORDER BY wl_work_datetime ASC
  </select>
</mapper>